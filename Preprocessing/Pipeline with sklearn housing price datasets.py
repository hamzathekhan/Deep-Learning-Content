# -*- coding: utf-8 -*-
"""Numpy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gOaP19LSsf6YHGOxTB8jlOgBKNZl-Rdr
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
# %matplotlib inline

df = pd.read_csv("housing.csv")
df.isnull().sum()

df.dtypes

df.head(10)

df.drop("ocean_proximity",axis=1,inplace=True)

from sklearn.model_selection import train_test_split

train_set , test_set = train_test_split(df,test_size=0.2,random_state=42)

df.head(10)

from sklearn.pipeline import Pipeline
from sklearn.preprocessing import MinMaxScaler
from sklearn.linear_model import LinearRegression
from sklearn.impute import SimpleImputer

pipe = Pipeline([
    ("imputer" , SimpleImputer(strategy="median")),
    ("mms" , MinMaxScaler()),
    ("model" , LinearRegression())
])

pipe.fit(train_set.drop("median_house_value" , axis=1) , train_set["median_house_value"])

y_predicted = pipe.predict(test_set.drop("median_house_value",axis=1))

y_true = test_set["median_house_value"]

plt.scatter(y_true,y_predicted,alpha=0.1)
plt.xlabel("True")
plt.ylabel("Predicted")
plt.show()