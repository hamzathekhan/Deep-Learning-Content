# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FnvNo8vhF_aEAM9Psl7bbKIMsnO89nV-
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
# %matplotlib inline

df = pd.read_csv("/content/framingham_heart_disease.csv")
df["education"] = df["education"].fillna(df["education"].mean())
df["cigsPerDay"] = df["cigsPerDay"].fillna(df["cigsPerDay"].mean())
df["BPMeds"] = df["BPMeds"].fillna(df["BPMeds"].mean())
df["totChol"] = df["totChol"].fillna(df["totChol"].mean())
df["BMI"] = df["BMI"].fillna(df["BMI"].mean())
df["heartRate"] = df["heartRate"].fillna(df["heartRate"].mean())
df["glucose"] = df["glucose"].fillna(df["glucose"].mean())
df.head(10)

col = [col for col in df.columns if col != "TenYearCHD"]
col

from sklearn.model_selection import train_test_split


X_train , X_test  , y_train , y_test = train_test_split(df[col],df["TenYearCHD"],test_size=0.2)

from sklearn.linear_model import LogisticRegression


model = LogisticRegression()

model.fit(X_train,y_train)

model.score(X_test,y_test)

y_predicted = model.predict(X_test)

y_predicted[0]

from sklearn.metrics import confusion_matrix


cm = confusion_matrix(y_test,y_predicted)
cm

import seaborn as sn


sn.heatmap(cm,annot=True)
plt.xlabel("Predicted")
plt.ylabel("Truth")
plt.show()